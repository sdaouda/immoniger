# -*- coding: utf-8 -*-
# Generated by Django 1.11.17 on 2019-05-14 12:58
from __future__ import unicode_literals

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(db_index=True, max_length=200)),
                ('slug', models.SlugField(max_length=200, unique=True)),
            ],
            options={
                'verbose_name': 'category',
                'verbose_name_plural': 'categories',
                'ordering': ('name',),
            },
        ),
        migrations.CreateModel(
            name='Commodite',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='Precisez un detail', max_length=200)),
                ('slug', models.SlugField(max_length=200, null=True, unique=True)),
            ],
            options={
                'ordering': ('name',),
            },
        ),
        migrations.CreateModel(
            name='Localite',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('localite', models.CharField(blank=True, max_length=100, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Product',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('reference', models.CharField(blank=True, db_index=True, max_length=50)),
                ('name', models.CharField(db_index=True, max_length=200)),
                ('slug', models.SlugField(max_length=200)),
                ('dimmension', models.CharField(blank=True, max_length=20, null=True)),
                ('numeroParcelle', models.CharField(blank=True, default='n/a', max_length=15, null=True)),
                ('lotissement', models.CharField(blank=True, default='n/a', max_length=200, null=True)),
                ('actsession', models.CharField(blank=True, max_length=200, null=True)),
                ('image', models.ImageField(blank=True, upload_to='products/imgs/')),
                ('image1', models.ImageField(blank=True, null=True, upload_to='products/imgs/')),
                ('image2', models.ImageField(blank=True, null=True, upload_to='products/imgs/')),
                ('image3', models.ImageField(blank=True, null=True, upload_to='products/imgs/')),
                ('image4', models.ImageField(blank=True, null=True, upload_to='products/imgs/')),
                ('image5', models.ImageField(blank=True, null=True, upload_to='products/imgs/')),
                ('description', models.TextField(blank=True, verbose_name='Decrire votre rechecher svp')),
                ('price', models.DecimalField(decimal_places=0, max_digits=15, verbose_name='Prix à partir de')),
                ('available', models.BooleanField(default=True)),
                ('nbChambre', models.PositiveIntegerField(verbose_name='Nombre Chambre(s)')),
                ('nbDouche', models.PositiveIntegerField(verbose_name='Nombre Douches(s)')),
                ('action_type', models.CharField(blank=True, choices=[('LOCATION', 'LOCATION'), ('VENTE', 'VENTE')], default='LOCATION', help_text='Vente/Location', max_length=10, verbose_name='action')),
                ('commdt', models.CharField(blank=True, choices=[('VIDE', 'VIDE'), ('MEUBLE', 'MEUBLE')], default='VIDE', help_text='Vide/meuble', max_length=10, verbose_name='Intérieur')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='products', to='FindImmo.Category')),
                ('details', models.ManyToManyField(help_text='Select a genre for this book', related_name='commodite', to='FindImmo.Commodite')),
                ('localite', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='FindImmo.Localite', verbose_name='localité')),
            ],
            options={
                'ordering': ('-created',),
            },
        ),
        migrations.CreateModel(
            name='Project',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(db_index=True, max_length=80)),
                ('reference', models.CharField(blank=True, db_index=True, max_length=50)),
                ('image', models.ImageField(blank=True, upload_to='project/imgs/')),
                ('description', models.TextField(blank=True, verbose_name='Description du project')),
                ('created', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'ordering': ('-created',),
            },
        ),
        migrations.CreateModel(
            name='Service',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('reference', models.CharField(blank=True, db_index=True, max_length=50)),
                ('image', models.ImageField(blank=True, upload_to='service/imgs/')),
                ('description', models.TextField(blank=True, verbose_name='Description du service')),
                ('created', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'ordering': ('-created',),
            },
        ),
        migrations.CreateModel(
            name='TypeProject',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('typeproj', models.CharField(db_index=True, max_length=80)),
            ],
        ),
        migrations.CreateModel(
            name='TypeService',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('typeserv', models.CharField(db_index=True, max_length=80)),
            ],
        ),
        migrations.CreateModel(
            name='Vendor',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=30)),
                ('email', models.EmailField(max_length=254)),
                ('phone1', models.CharField(max_length=20)),
                ('phone2', models.CharField(blank=True, max_length=20, null=True)),
                ('phone3', models.CharField(blank=True, max_length=20, null=True)),
                ('address', models.CharField(blank=True, max_length=200, null=True)),
                ('ville', models.CharField(max_length=50)),
                ('quartier', models.CharField(blank=True, max_length=50, null=True)),
                ('localization', models.TextField()),
            ],
        ),
        migrations.CreateModel(
            name='Zone',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('zone', models.CharField(db_index=True, max_length=20)),
            ],
        ),
        migrations.AddField(
            model_name='service',
            name='owner',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='FindImmo.Vendor'),
        ),
        migrations.AddField(
            model_name='service',
            name='typeservice',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='tservice', to='FindImmo.TypeService'),
        ),
        migrations.AddField(
            model_name='project',
            name='owner',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='FindImmo.Vendor'),
        ),
        migrations.AddField(
            model_name='project',
            name='typeproject',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='tproject', to='FindImmo.TypeProject'),
        ),
        migrations.AddField(
            model_name='product',
            name='vendeur',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='FindImmo.Vendor'),
        ),
        migrations.AddField(
            model_name='localite',
            name='zone',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='FindImmo.Zone'),
        ),
        migrations.AlterIndexTogether(
            name='product',
            index_together=set([('id', 'slug')]),
        ),
    ]
